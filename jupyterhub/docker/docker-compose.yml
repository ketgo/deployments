version: "3.7"

services:
  hub-db:
    image: postgres:9.5
    container_name: jupyterhub-db
    restart: always
    networks:
      - jupyterhub
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${DB_VOLUME_CONTAINER}
    env_file:
      - secrets/postgres.env
    volumes:
      - ${DB_VOLUME_HOST}:${DB_VOLUME_CONTAINER}

  hub:
    depends_on:
      - hub-db
    build:
      context: .
      dockerfile: Dockerfile.hub
      args:
        JUPYTERHUB_VERSION: ${JUPYTERHUB_VERSION}
    restart: always
    image: jupyterhub
    container_name: jupyterhub
    networks:
      - jupyterhub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ${DATA_VOLUME_HOST}:${DATA_VOLUME_CONTAINER}
      - ${COMMON_DATA_HOST_VOLUME}:${COMMON_DATA_CONTAINER_VOLUME}
    ports:
      - "8080:8000"
    links:
      - hub-db
    environment:
      DOCKER_NETWORK_NAME: jupyterhub
      DOCKER_NOTEBOOK_IMAGE: ${DOCKER_NOTEBOOK_IMAGE}
      DOCKER_NOTEBOOK_DIR: ${DOCKER_NOTEBOOK_DIR}
      DOCKER_NOTEBOOK_HOST_DIR: ${DOCKER_NOTEBOOK_HOST_DIR}
      DOCKER_SPAWN_CMD: ${DOCKER_SPAWN_CMD}
      COMMON_DATA_HOST_VOLUME: ${COMMON_DATA_HOST_VOLUME}
      COMMON_DATA_CONTAINER_VOLUME: ${COMMON_DATA_CONTAINER_VOLUME}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: hub-db
    env_file:
      - secrets/postgres.env
      - secrets/oauth.env
    command: >
      jupyterhub -f /srv/jupyterhub/jupyterhub_config.py

networks:
  jupyterhub:
    name: jupyterhub
